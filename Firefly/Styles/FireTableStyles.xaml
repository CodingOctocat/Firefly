<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:c="clr-namespace:Firefly.Controls"
                    xmlns:comm="clr-namespace:Firefly.Common"
                    xmlns:conv="clr-namespace:Firefly.Converters"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:hc="https://handyorg.github.io/handycontrol"
                    xmlns:m="clr-namespace:Firefly.Models"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    mc:Ignorable="d">

    <conv:FireTableCellContextMenuIsEnabledConverter x:Key="ContextMenuIsEnabledConverter" />
    <conv:GetColumnTextConverter x:Key="GetColumnTextConverter" />
    <conv:FireTableCellInfoConverter x:Key="FireTableCellInfoConverter" />
    <conv:NewLineToSymbolConverter x:Key="NewLineConverter" />
    <conv:EnumHasFlagConverter x:Key="EnumHasFlagConverter" />
    <conv:GetFireErrorsEnumDescriptionConverter x:Key="GetDescriptionConverter" />
    <conv:SubtractOneConverter x:Key="SubtractOneConverter" />

    <DrawingImage x:Key="rule_skip">
        <DrawingImage.Drawing>
            <DrawingGroup ClipGeometry="M0,0 V32 H32 V0 H0 Z">
                <GeometryDrawing Brush="{DynamicResource InfoBrush}"
                                 Geometry="F1 M32,32z M0,0z M30,24A6,6,0,1,0,24,30A6.0066,6.0066,0,0,0,30,24z M28,24A3.9521,3.9521,0,0,1,27.4331,26.019L21.981,20.5669A3.9529,3.9529,0,0,1,24,20A4.0045,4.0045,0,0,1,28,24z M20,24A3.9521,3.9521,0,0,1,20.5669,21.981L26.019,27.4331A3.9529,3.9529,0,0,1,24,28A4.0045,4.0045,0,0,1,20,24z" />
                <GeometryDrawing Brush="{DynamicResource InfoBrush}">
                    <GeometryDrawing.Geometry>
                        <RectangleGeometry RadiusX="0"
                                           RadiusY="0"
                                           Rect="8,16,10,2" />
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
                <GeometryDrawing Brush="{DynamicResource InfoBrush}">
                    <GeometryDrawing.Geometry>
                        <RectangleGeometry RadiusX="0"
                                           RadiusY="0"
                                           Rect="8,10,12,2" />
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
                <GeometryDrawing Brush="{DynamicResource InfoBrush}"
                                 Geometry="F1 M32,32z M0,0z M14,27.7334L8.7656,24.9424A8.9858,8.9858,0,0,1,4,17L4,4 24,4 24,15 26,15 26,4A2.0023,2.0023,0,0,0,24,2L4,2A2.0023,2.0023,0,0,0,2,4L2,17A10.9814,10.9814,0,0,0,7.8242,26.707L14,30z" />
            </DrawingGroup>
        </DrawingImage.Drawing>
    </DrawingImage>

    <DrawingImage x:Key="content_skip">
        <DrawingImage.Drawing>
            <DrawingGroup ClipGeometry="M0,0 V24 H24 V0 H0 Z">
                <DrawingGroup Opacity="1">
                    <GeometryDrawing Brush="{DynamicResource InfoBrush}"
                                     Geometry="F1 M24,24z M0,0z M20,5C20.552,5,21,5.448,21,6L21,12C21,12.552 20.552,13 20,13 20.628,13.835 21,14.874 21,16 21,18.761 18.761,21 16,21 13.239,21 11,18.761 11,16 11,14.874 11.372,13.835 12,13L4,13C3.448,13,3,12.552,3,12L3,6C3,5.448,3.448,5,4,5L20,5z M13,15L13,17 19,17 19,15 13,15z M19,7L5,7 5,11 19,11 19,7z" />
                </DrawingGroup>
            </DrawingGroup>
        </DrawingImage.Drawing>
    </DrawingImage>

    <ContextMenu x:Key="FireTableCellContextMenu"
                 Tag="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
        <MenuItem Command="{Binding Tag.ManualQueryFieldCommand, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}"
                  Icon="{StaticResource SearchIcon}"
                  IsEnabled="{Binding Tag, RelativeSource={RelativeSource Self}, Converter={StaticResource ContextMenuIsEnabledConverter}}"
                  Tag="{Binding PlacementTarget, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}, Converter={StaticResource GetColumnTextConverter}, ConverterParameter='N/A'}">
            <MenuItem.CommandParameter>
                <MultiBinding Converter="{StaticResource FireTableCellInfoConverter}">
                    <Binding Path="PlacementTarget.Column.Header"
                             RelativeSource="{RelativeSource AncestorType={x:Type ContextMenu}}" />
                    <Binding Path="Tag"
                             RelativeSource="{RelativeSource Self}" />
                </MultiBinding>
            </MenuItem.CommandParameter>

            <MenuItem.Header>
                <TextBlock>
                    <Run Text="查询: " /><Run Foreground="{DynamicResource MyPrimaryBrush}"
                         Text="{Binding Tag, RelativeSource={RelativeSource AncestorType={x:Type MenuItem}}}" />
                </TextBlock>
            </MenuItem.Header>
        </MenuItem>
    </ContextMenu>

    <Style x:Key="FireTableGroupItemStyle"
           TargetType="{x:Type GroupItem}">
        <Setter Property="Margin" Value="0,0,0,4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupItem}">
                    <Expander IsExpanded="{Binding DataContext.AreAllGroupsExpanded, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Mode=OneWay}">
                        <Expander.Header>
                            <DockPanel>
                                <hc:SimpleText FontWeight="Bold"
                                               Text="{Binding Path=Name, Converter={StaticResource NewLineConverter}}" />

                                <hc:SimpleText Margin="8,0,0,0"
                                               FontWeight="Bold"
                                               Text="{Binding Path=ItemCount, StringFormat='({0})'}" />
                            </DockPanel>
                        </Expander.Header>

                        <Expander.Content>
                            <ItemsPresenter />
                        </Expander.Content>
                    </Expander>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FireTableCellStyle"
           BasedOn="{StaticResource DataGridCellStyle}"
           TargetType="{x:Type DataGridCell}">
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />

        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{x:Null}" />
                <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FireTableRowStyle"
           BasedOn="{StaticResource DataGridRowStyle}"
           TargetType="{x:Type DataGridRow}">
        <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
        <Setter Property="Margin" Value="0,2" />

        <Style.Triggers>
            <DataTrigger Binding="{Binding HasError}"
                         Value="{StaticResource False}">
                <Setter Property="Background" Value="{DynamicResource MyLightSuccessTableBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource SuccessBrush}" />
                <Setter Property="BorderThickness" Value="4,0,0,0" />
            </DataTrigger>

            <DataTrigger Binding="{Binding HasError}"
                         Value="{StaticResource True}">
                <Setter Property="Background" Value="{DynamicResource MyLightDangerTableBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource DangerBrush}" />
                <Setter Property="BorderThickness" Value="4,0,0,0" />
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked}" Value="{StaticResource True}" />
                    <Condition Binding="{Binding Cccf, Converter={StaticResource Object2BooleanConverter}}" Value="{StaticResource False}" />
                </MultiDataTrigger.Conditions>

                <Setter Property="Background" Value="{DynamicResource BorderBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource MySecondaryBorderBrush}" />
                <Setter Property="BorderThickness" Value="4,0,0,0" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked}" Value="{StaticResource True}" />
                    <Condition Binding="{Binding IsSkipped}" Value="{StaticResource True}" />
                </MultiDataTrigger.Conditions>

                <Setter Property="Background" Value="{DynamicResource BorderBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource InfoBrush}" />
                <Setter Property="BorderThickness" Value="4,0,0,0" />
            </MultiDataTrigger>

            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource MyLightPrimaryBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                <Setter Property="BorderThickness" Value="1" />
            </Trigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=Self}}" Value="{StaticResource True}" />
                    <Condition Binding="{Binding HasError}" Value="{StaticResource False}" />
                </MultiDataTrigger.Conditions>

                <Setter Property="Background" Value="{DynamicResource MyLightSuccessTableBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource SuccessBrush}" />
                <Setter Property="BorderThickness" Value="4,1,1,1" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=Self}}" Value="{StaticResource True}" />
                    <Condition Binding="{Binding HasError}" Value="{StaticResource True}" />
                </MultiDataTrigger.Conditions>

                <Setter Property="Background" Value="{DynamicResource MyLightDangerTableBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource DangerBrush}" />
                <Setter Property="BorderThickness" Value="4,1,1,1" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=Self}}" Value="{StaticResource True}" />
                    <Condition Binding="{Binding IsChecked}" Value="{StaticResource True}" />
                    <Condition Binding="{Binding Cccf, Converter={StaticResource Object2BooleanConverter}}" Value="{StaticResource False}" />
                </MultiDataTrigger.Conditions>

                <Setter Property="Background" Value="{DynamicResource BorderBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource MySecondaryBorderBrush}" />
                <Setter Property="BorderThickness" Value="4,1,1,1" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=Self}}" Value="{StaticResource True}" />
                    <Condition Binding="{Binding IsChecked}" Value="{StaticResource True}" />
                    <Condition Binding="{Binding IsSkipped}" Value="{StaticResource True}" />
                </MultiDataTrigger.Conditions>

                <Setter Property="Background" Value="{DynamicResource BorderBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource InfoBrush}" />
                <Setter Property="BorderThickness" Value="4,1,1,1" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="{StaticResource True}" />
                    <Condition Binding="{Binding HasError}" Value="{StaticResource False}" />
                </MultiDataTrigger.Conditions>

                <Setter Property="BorderThickness" Value="4,1,1,1" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="{StaticResource True}" />
                    <Condition Binding="{Binding HasError}" Value="{StaticResource True}" />
                </MultiDataTrigger.Conditions>

                <Setter Property="BorderThickness" Value="4,1,1,1" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="{StaticResource True}" />
                    <Condition Binding="{Binding IsChecked}" Value="{StaticResource True}" />
                    <Condition Binding="{Binding Cccf, Converter={StaticResource Object2BooleanConverter}}" Value="{StaticResource False}" />
                </MultiDataTrigger.Conditions>

                <Setter Property="BorderThickness" Value="4,1,1,1" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="{StaticResource True}" />
                    <Condition Binding="{Binding IsChecked}" Value="{StaticResource True}" />
                    <Condition Binding="{Binding IsSkipped}" Value="{StaticResource True}" />
                </MultiDataTrigger.Conditions>

                <Setter Property="BorderThickness" Value="4,1,1,1" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="FireTableOrderTemplate"
                  DataType="{x:Type m:FireCheckContext}">
        <hc:SimplePanel>
            <hc:CircleProgressBar Width="24"
                                  Height="24"
                                  Margin="-999"
                                  ArcThickness="4"
                                  IsIndeterminate="True"
                                  Visibility="{Binding CheckCommand.IsRunning, Converter={StaticResource Boolean2VisibilityConverter}}" />

            <hc:SimpleText HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Text="{Binding Order}" />
        </hc:SimplePanel>
    </DataTemplate>

    <DataTemplate x:Key="FireTableCccfProductNameTemplate"
                  DataType="{x:Type m:FireCheckContext}">
        <c:DiffTextControl Margin="4,0"
                           ForegroundDiff="{DynamicResource DangerBrush}"
                           ForegroundSame="{DynamicResource SuccessBrush}"
                           Text="{Binding Cccf.ProductName, Converter={StaticResource NewLineConverter}, FallbackValue=''}"
                           Text2="{Binding FireProduct.Name.Text, FallbackValue=''}" />
    </DataTemplate>

    <DataTemplate x:Key="FireTableProductNameTemplate"
                  DataType="{x:Type m:FireCheckContext}">
        <TextBlock>
            <TextBlock.Style>
                <Style BasedOn="{StaticResource DataGridTextColumnStyle}"
                       TargetType="{x:Type TextBlock}">
                    <Setter Property="Background" Value="{x:Null}" />
                    <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                    <Setter Property="Text" Value="{Binding FireProduct.Name.Raw, Converter={StaticResource NewLineConverter}}" />

                    <Style.Triggers>
                        <DataTrigger Binding="{Binding FireErrors, Converter={StaticResource EnumHasFlagConverter}, ConverterParameter={x:Static m:FireErrors.Irrelevant}}"
                                     Value="{StaticResource True}">
                            <Setter Property="Background" Value="{DynamicResource DangerBrush}" />
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="HorizontalAlignment" Value="Left" />
                            <Setter Property="ToolTip" Value="{Binding Source={x:Static m:FireErrors.Irrelevant}, Converter={StaticResource GetDescriptionConverter}}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
    </DataTemplate>

    <DataTemplate x:Key="FireTableModelTemplate"
                  DataType="{x:Type m:FireCheckContext}">
        <TextBlock>
            <TextBlock.Style>
                <Style BasedOn="{StaticResource DataGridTextColumnStyle}"
                       TargetType="{x:Type TextBlock}">
                    <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
                    <Setter Property="Text" Value="{Binding FireProduct.Model.Raw}" />
                    <Setter Property="TextDecorations" Value="None" />

                    <Style.Triggers>
                        <DataTrigger Binding="{Binding FireErrors, Converter={StaticResource EnumHasFlagConverter}, ConverterParameter={x:Static m:FireErrors.MissingModel}}"
                                     Value="{StaticResource True}">
                            <Setter Property="Foreground" Value="{DynamicResource MyWarningBrush}" />
                            <Setter Property="Text" Value="{Binding Source={x:Static m:FireErrors.MissingModel}, StringFormat='&lt;{0}&gt;', Converter={StaticResource GetDescriptionConverter}}" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding FireErrors, Converter={StaticResource EnumHasFlagConverter}, ConverterParameter={x:Static m:FireErrors.MismatchedModel}}"
                                     Value="{StaticResource True}">
                            <Setter Property="Foreground" Value="{DynamicResource DangerBrush}" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding FireErrors, Converter={StaticResource EnumHasFlagConverter}, ConverterParameter={x:Static m:FireErrors.InvalidModel}}"
                                     Value="{StaticResource True}">
                            <Setter Property="Foreground" Value="{DynamicResource DangerBrush}" />
                            <Setter Property="TextDecorations" Value="Strikethrough" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
    </DataTemplate>

    <DataTemplate x:Key="FireTableEnterpriseNameTemplate"
                  DataType="{x:Type m:FireCheckContext}">
        <TextBlock>
            <TextBlock.Style>
                <Style BasedOn="{StaticResource DataGridTextColumnStyle}"
                       TargetType="{x:Type TextBlock}">
                    <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
                    <Setter Property="Text" Value="{Binding FireProduct.EnterpriseName.Raw}" />
                    <Setter Property="TextDecorations" Value="None" />

                    <Style.Triggers>
                        <DataTrigger Binding="{Binding FireErrors, Converter={StaticResource EnumHasFlagConverter}, ConverterParameter={x:Static m:FireErrors.MissingEnterpriseName}}"
                                     Value="{StaticResource True}">
                            <Setter Property="Foreground" Value="{DynamicResource MyWarningBrush}" />
                            <Setter Property="Text" Value="{Binding Source={x:Static m:FireErrors.MissingEnterpriseName}, StringFormat='&lt;{0}&gt;', Converter={StaticResource GetDescriptionConverter}}" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding FireErrors, Converter={StaticResource EnumHasFlagConverter}, ConverterParameter={x:Static m:FireErrors.MismatchedEnterpriseName}}"
                                     Value="{StaticResource True}">
                            <Setter Property="Foreground" Value="{DynamicResource DangerBrush}" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding FireErrors, Converter={StaticResource EnumHasFlagConverter}, ConverterParameter={x:Static m:FireErrors.InvalidEnterprise}}"
                                     Value="{StaticResource True}">
                            <Setter Property="Foreground" Value="{DynamicResource DangerBrush}" />
                            <Setter Property="TextDecorations" Value="Strikethrough" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
    </DataTemplate>

    <DataTemplate x:Key="FireTableCertificateNumberTemplate"
                  DataType="{x:Type m:FireCheckContext}">
        <TextBlock>
            <TextBlock.Style>
                <Style BasedOn="{StaticResource DataGridTextColumnStyle}"
                       TargetType="{x:Type TextBlock}">
                    <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
                    <Setter Property="Text" Value="{Binding FireProduct.CertificateNumber.Raw}" />
                    <Setter Property="TextDecorations" Value="None" />

                    <Style.Triggers>
                        <DataTrigger Binding="{Binding FireErrors, Converter={StaticResource EnumHasFlagConverter}, ConverterParameter={x:Static m:FireErrors.MissingCertificateNumber}}"
                                     Value="{StaticResource True}">
                            <Setter Property="Foreground" Value="{DynamicResource MyWarningBrush}" />
                            <Setter Property="Text" Value="{Binding Source={x:Static m:FireErrors.MissingCertificateNumber}, StringFormat='&lt;{0}&gt;', Converter={StaticResource GetDescriptionConverter}}" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding FireErrors, Converter={StaticResource EnumHasFlagConverter}, ConverterParameter={x:Static m:FireErrors.MismatchedCertificateNumber}}"
                                     Value="{StaticResource True}">
                            <Setter Property="Foreground" Value="{DynamicResource DangerBrush}" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding FireErrors, Converter={StaticResource EnumHasFlagConverter}, ConverterParameter={x:Static m:FireErrors.InvalidCertificateNumber}}"
                                     Value="{StaticResource True}">
                            <Setter Property="Foreground" Value="{DynamicResource DangerBrush}" />
                            <Setter Property="TextDecorations" Value="Strikethrough" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
    </DataTemplate>

    <DataTemplate x:Key="FireTableReportNumberTemplate"
                  DataType="{x:Type m:FireCheckContext}">
        <TextBlock>
            <TextBlock.Style>
                <Style BasedOn="{StaticResource DataGridTextColumnStyle}"
                       TargetType="{x:Type TextBlock}">
                    <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
                    <Setter Property="Text" Value="{Binding FireProduct.ReportNumber.Raw}" />
                    <Setter Property="TextDecorations" Value="None" />

                    <Style.Triggers>
                        <DataTrigger Binding="{Binding FireErrors, Converter={StaticResource EnumHasFlagConverter}, ConverterParameter={x:Static m:FireErrors.MissingReportNumber}}"
                                     Value="{StaticResource True}">
                            <Setter Property="Foreground" Value="{DynamicResource MyWarningBrush}" />
                            <Setter Property="Text" Value="{Binding Source={x:Static m:FireErrors.MissingReportNumber}, StringFormat='&lt;{0}&gt;', Converter={StaticResource GetDescriptionConverter}}" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding FireErrors, Converter={StaticResource EnumHasFlagConverter}, ConverterParameter={x:Static m:FireErrors.MismatchedReportNumber}}"
                                     Value="{StaticResource True}">
                            <Setter Property="Foreground" Value="{DynamicResource DangerBrush}" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding FireErrors, Converter={StaticResource EnumHasFlagConverter}, ConverterParameter={x:Static m:FireErrors.InvalidReportNumber}}"
                                     Value="{StaticResource True}">
                            <Setter Property="Foreground" Value="{DynamicResource DangerBrush}" />
                            <Setter Property="TextDecorations" Value="Strikethrough" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
    </DataTemplate>

    <DataTemplate x:Key="FireTableManufactureDateTemplate"
                  DataType="{x:Type m:FireCheckContext}">
        <TextBlock>
            <TextBlock.Style>
                <Style BasedOn="{StaticResource DataGridTextColumnStyle}"
                       TargetType="{x:Type TextBlock}">
                    <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
                    <Setter Property="Text" Value="{Binding FireProduct.ManufactureDate.Raw, Converter={StaticResource NewLineConverter}}" />
                    <Setter Property="TextDecorations" Value="None" />

                    <Style.Triggers>
                        <DataTrigger Binding="{Binding FireErrors, Converter={StaticResource EnumHasFlagConverter}, ConverterParameter={x:Static m:FireErrors.MissingManufactureDate}}"
                                     Value="{StaticResource True}">
                            <Setter Property="Foreground" Value="{DynamicResource MyWarningBrush}" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding FireErrors, Converter={StaticResource EnumHasFlagConverter}, ConverterParameter={x:Static m:FireErrors.InvalidManufactureDate}}"
                                     Value="{StaticResource True}">
                            <Setter Property="Foreground" Value="{DynamicResource DangerBrush}" />
                            <Setter Property="TextDecorations" Value="Strikethrough" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
    </DataTemplate>

    <DataTemplate x:Key="FireTableRowDetailsTemplate"
                  DataType="{x:Type m:FireCheckContext}">
        <hc:SimplePanel Width="{Binding ViewportWidth, RelativeSource={RelativeSource AncestorType={x:Type ScrollViewer}}}"
                        Margin="0,4,0,2"
                        HorizontalAlignment="Left">
            <Border Padding="8"
                    CornerRadius="8">
                <Border.Style>
                    <Style BasedOn="{StaticResource BorderRegion}"
                           TargetType="{x:Type Border}">
                        <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
                        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                        <Setter Property="BorderThickness" Value="1" />

                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" Value="{StaticResource True}" />
                                    <Condition Binding="{Binding HasError}" Value="{StaticResource False}" />
                                </MultiDataTrigger.Conditions>

                                <Setter Property="Background" Value="{DynamicResource MyLightSuccessTableBrush}" />
                                <Setter Property="BorderBrush" Value="{DynamicResource SuccessBrush}" />
                                <Setter Property="BorderThickness" Value="1" />
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" Value="{StaticResource True}" />
                                    <Condition Binding="{Binding HasError}" Value="{StaticResource True}" />
                                </MultiDataTrigger.Conditions>

                                <Setter Property="Background" Value="{DynamicResource MyLightDangerTableBrush}" />
                                <Setter Property="BorderBrush" Value="{DynamicResource DangerBrush}" />
                                <Setter Property="BorderThickness" Value="1" />
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" Value="{StaticResource True}" />
                                    <Condition Binding="{Binding IsChecked}" Value="{StaticResource True}" />
                                    <Condition Binding="{Binding Cccf, Converter={StaticResource Object2BooleanConverter}}" Value="{StaticResource False}" />
                                </MultiDataTrigger.Conditions>

                                <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
                                <Setter Property="BorderBrush" Value="{DynamicResource MySecondaryBorderBrush}" />
                                <Setter Property="BorderThickness" Value="1" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>

                <hc:SimplePanel>
                    <Grid Visibility="{Binding Cccf, Converter={StaticResource Object2VisibilityConverter}}">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="4*" />
                            <ColumnDefinition Width="3*" />
                            <ColumnDefinition Width="1.5*" />
                            <ColumnDefinition Width="1*" />
                        </Grid.ColumnDefinitions>

                        <ContentControl Margin="8,0"
                                        Content="{Binding Cccf}"
                                        ContentTemplate="{StaticResource CccfColumn1Template}" />

                        <ContentControl Grid.Column="1"
                                        Margin="8,0"
                                        Content="{Binding Cccf}"
                                        ContentTemplate="{StaticResource CccfColumn2Template}" />

                        <ContentControl Grid.Column="2"
                                        Margin="8,0"
                                        Content="{Binding Cccf}"
                                        ContentTemplate="{StaticResource CccfColumn3Template}" />

                        <ContentControl Grid.Column="3"
                                        Margin="8,0"
                                        Content="{Binding Cccf}"
                                        ContentTemplate="{StaticResource CccfColumn4Template}" />

                        <TextBlock Grid.Row="1"
                                   Grid.ColumnSpan="4"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Center"
                                   Foreground="{DynamicResource PrimaryTextBrush}"
                                   TextWrapping="NoWrap">
                            <Run Text="第" />
                            <Run Text="{Binding CccfQueryResponse.CurrentPage, Mode=OneWay, FallbackValue=0}" /><Run Text="/" /><Run Text="{Binding CccfQueryResponse.TotalPages, Mode=OneWay, FallbackValue=0}" />
                            <Run Text="页, 共" />
                            <Run FontWeight="Bold"
                                 Foreground="{DynamicResource InfoBrush}"
                                 Text="{Binding CccfQueryResponse.TotalRecords, Mode=OneWay, FallbackValue=0}" />
                            <Run Text="条记录" />
                            <Run Text="(已获取" />
                            <Run Text="{Binding CccfQueryResponse.Records.Count, Mode=OneWay, FallbackValue=0}" />
                            <Run Text="条记录)" />
                        </TextBlock>

                        <Button Grid.Row="1"
                                Grid.ColumnSpan="4"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Command="{Binding DataContext.ManualQueryMoreCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                CommandParameter="{Binding CccfRequest}"
                                Style="{StaticResource ButtonDefault.Small}"
                                ToolTip="转到手动查询页面查看更多结果">
                            <Button.Content>
                                <TextBlock>
                                    <Run Text="查看更多" />
                                    <Run Text="{Binding CccfQueryResponse.Records.Count, Mode=OneWay, FallbackValue=0, StringFormat='(+{0})', Converter={StaticResource SubtractOneConverter}}" />
                                </TextBlock>
                            </Button.Content>
                        </Button>
                    </Grid>

                    <hc:ToggleBlock d:IsChecked="True"
                                    IsChecked="{Binding CheckCommand.IsRunning, Mode=OneWay}">
                        <hc:ToggleBlock.UnCheckedContent>
                            <hc:ToggleBlock IsChecked="{Binding IsChecked, Mode=OneWay}">
                                <hc:ToggleBlock.UnCheckedContent>
                                    <hc:Empty d:Visibility="Visible"
                                              hc:Empty.ShowEmpty="True"
                                              Background="{DynamicResource DarkMaskBrush}">
                                        <hc:Empty.Logo>
                                            <Viewbox Width="36"
                                                     Height="36">
                                                <Path Data="{StaticResource ClockGeometry}"
                                                      Fill="{DynamicResource MyPrimaryBrush}"
                                                      Style="{StaticResource IconParkStyle}" />
                                            </Viewbox>
                                        </hc:Empty.Logo>

                                        <hc:Empty.Description>
                                            <hc:SimpleText Margin="0,8,0,0"
                                                           HorizontalAlignment="Center"
                                                           Text="队列中" />
                                        </hc:Empty.Description>
                                    </hc:Empty>
                                </hc:ToggleBlock.UnCheckedContent>

                                <hc:ToggleBlock.CheckedContent>
                                    <hc:ToggleBlock IsChecked="{Binding IsSkipped, Mode=OneWay}">
                                        <hc:ToggleBlock.UnCheckedContent>
                                            <hc:Empty d:Visibility="Visible"
                                                      hc:Empty.ShowEmpty="True"
                                                      Visibility="{Binding Cccf, Mode=OneWay, Converter={StaticResource Object2VisibilityReConverter}}">
                                                <hc:Empty.Description>
                                                    <hc:SimpleText Margin="0,8,0,0"
                                                                   HorizontalAlignment="Center"
                                                                   Foreground="{DynamicResource SecondaryTextBrush}"
                                                                   Text="未查询到记录" />
                                                </hc:Empty.Description>
                                            </hc:Empty>
                                        </hc:ToggleBlock.UnCheckedContent>

                                        <hc:ToggleBlock.CheckedContent>
                                            <hc:SimplePanel>
                                                <hc:Empty d:Visibility="Visible"
                                                          hc:Empty.ShowEmpty="True"
                                                          Visibility="{Binding IsRuleSkipped, Mode=OneWay, Converter={StaticResource Boolean2VisibilityConverter}}">
                                                    <hc:Empty.Logo>
                                                        <Image Width="36"
                                                               Height="36"
                                                               Source="{StaticResource rule_skip}" />
                                                    </hc:Empty.Logo>

                                                    <hc:Empty.Description>
                                                        <hc:SimpleText Margin="0,8,0,0"
                                                                       HorizontalAlignment="Center"
                                                                       Foreground="{DynamicResource InfoBrush}"
                                                                       Text="&lt;规则跳过&gt;" />
                                                    </hc:Empty.Description>
                                                </hc:Empty>

                                                <hc:Empty d:Visibility="Visible"
                                                          hc:Empty.ShowEmpty="True"
                                                          Visibility="{Binding IsContentSkipped, Mode=OneWay, Converter={StaticResource Boolean2VisibilityConverter}}">
                                                    <hc:Empty.Logo>
                                                        <Image Width="36"
                                                               Height="36"
                                                               Source="{StaticResource content_skip}" />
                                                    </hc:Empty.Logo>

                                                    <hc:Empty.Description>
                                                        <hc:SimpleText Margin="0,8,0,0"
                                                                       HorizontalAlignment="Center"
                                                                       Foreground="{DynamicResource InfoBrush}"
                                                                       Text="&lt;内容跳过&gt;" />
                                                    </hc:Empty.Description>
                                                </hc:Empty>
                                            </hc:SimplePanel>
                                        </hc:ToggleBlock.CheckedContent>
                                    </hc:ToggleBlock>
                                </hc:ToggleBlock.CheckedContent>
                            </hc:ToggleBlock>
                        </hc:ToggleBlock.UnCheckedContent>

                        <hc:ToggleBlock.CheckedContent>
                            <hc:Empty hc:Empty.ShowEmpty="True"
                                      Background="{DynamicResource DarkMaskBrush}">
                                <hc:Empty.Logo>
                                    <hc:LoadingCircle />
                                </hc:Empty.Logo>

                                <hc:Empty.Description>
                                    <hc:SimpleText Margin="0,8,0,0"
                                                   HorizontalAlignment="Center"
                                                   Text="正在查询..." />
                                </hc:Empty.Description>
                            </hc:Empty>
                        </hc:ToggleBlock.CheckedContent>
                    </hc:ToggleBlock>
                </hc:SimplePanel>
            </Border>
        </hc:SimplePanel>
    </DataTemplate>

</ResourceDictionary>