<hc:Window x:Class="Firefly.Views.FireTableColumnMappingWindow"
           xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
           xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
           xmlns:b="clr-namespace:Firefly.Behaviors"
           xmlns:comm="clr-namespace:Firefly.Common"
           xmlns:conv="clr-namespace:Firefly.Converters"
           xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
           xmlns:dd="urn:gong-wpf-dragdrop"
           xmlns:hc="https://handyorg.github.io/handycontrol"
           xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
           xmlns:m="clr-namespace:Firefly.Models"
           xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
           xmlns:vm="clr-namespace:Firefly.ViewModels"
           Title="Firefly (萤火虫): 表列映射"
           MaxWidth="1000"
           MaxHeight="702"
           Padding="12"
           d:DataContext="{d:DesignInstance Type=vm:FireTableColumnMappingViewModel,
                                            IsDesignTimeCreatable=False}"
           Background="{DynamicResource RegionBrush}"
           Icon="/Resources/firefly.ico"
           ResizeMode="CanMinimize"
           SizeToContent="WidthAndHeight"
           Topmost="True"
           UseLayoutRounding="True"
           WindowStartupLocation="CenterScreen"
           mc:Ignorable="d">
    <hc:Window.Resources>
        <comm:BindingProxy x:Key="DataContextProxy"
                           Data="{Binding}" />

        <conv:EnumToIntConverter x:Key="EnumToIntConverter" />
        <conv:EnumEqualsConverter x:Key="EnumEqualsConverter" />
        <conv:FireTableColumnErrorConverter x:Key="FireTableColumnErrorConverter" />
        <conv:AddOneConverter x:Key="AddOneConverter" />
        <conv:StringToBoolConverter x:Key="StringToBoolConverter" />
    </hc:Window.Resources>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand}" />
        </i:EventTrigger>

        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding ClosingCommand}"
                                   PassEventArgsToCommand="True" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <hc:Window.NonClientAreaContent>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <Border Margin="24,0"
                    Padding="8,4"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    hc:WindowAttach.IsDragElement="True"
                    Background="{DynamicResource BorderBrush}"
                    CornerRadius="4"
                    ToolTip="{Binding MappingFilePath, Converter={StaticResource RelativePathConverter}}">
                <hc:SimpleStackPanel Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center"
                               FontWeight="Bold"
                               Text="{Binding MappingFileName}"
                               TextTrimming="CharacterEllipsis" />

                    <TextBlock VerticalAlignment="Center"
                               FontWeight="Bold"
                               Text="*"
                               Visibility="{Binding ColumnMapping.IsChanged, Converter={StaticResource Boolean2VisibilityConverter}}" />
                </hc:SimpleStackPanel>
            </Border>

            <hc:SimpleStackPanel Margin="12,0"
                                 HorizontalAlignment="Right"
                                 Orientation="Horizontal">
                <ToggleButton Margin="12,0,0,0"
                              IsChecked="{Binding Path=Topmost, RelativeSource={RelativeSource AncestorType={x:Type hc:Window}}}"
                              Style="{StaticResource ToggleButtonSwitch}"
                              ToolTip="置于顶层" />
            </hc:SimpleStackPanel>
        </Grid>
    </hc:Window.NonClientAreaContent>

    <Grid Margin="12"
          hc:WindowAttach.IsDragElement="True"
          Background="{DynamicResource RegionBrush}">
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="300" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <hc:UniformSpacingPanel x:Name="mappingPanel"
                                    Grid.RowSpan="2"
                                    Orientation="Vertical"
                                    VerticalSpacing="8">
                <hc:UniformSpacingPanel.Resources>
                    <Style BasedOn="{StaticResource ComboBoxPlusBaseStyle}"
                           TargetType="{x:Type hc:ComboBox}">
                        <Setter Property="DisplayMemberPath" Value="Display" />
                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                        <Setter Property="ItemsSource" Value="{Binding OptionalColumnNumbers}" />
                        <Setter Property="MaxDropDownHeight" Value="285" />
                        <Setter Property="SelectedIndex" Value="-1" />
                        <Setter Property="SelectedValuePath" Value="Value" />
                        <Setter Property="hc:TitleElement.TitlePlacement" Value="Left" />
                        <Setter Property="hc:TitleElement.TitleWidth" Value="68" />

                        <Style.Triggers>
                            <DataTrigger Value="{StaticResource True}">
                                <DataTrigger.Binding>
                                    <MultiBinding Converter="{StaticResource FireTableColumnErrorConverter}">
                                        <Binding Path="Data.FireTableColumnMapping.Errors"
                                                 Source="{StaticResource DataContextProxy}" />
                                        <Binding Path="Tag"
                                                 RelativeSource="{RelativeSource Self}" />
                                    </MultiBinding>
                                </DataTrigger.Binding>

                                <Setter Property="BorderBrush" Value="{DynamicResource DangerBrush}" />
                                <Setter Property="BorderThickness" Value="1" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </hc:UniformSpacingPanel.Resources>

                <GroupBox Header="视图分组">
                    <hc:ComboBox x:Name="cboFireSystem"
                                 hc:TitleElement.Title="系统名称"
                                 ItemsSource="{Binding FireSystemColumnNumbers}"
                                 SelectedValue="{Binding ColumnMapping.FireSystemColumn, Converter={StaticResource EnumToIntConverter}, ConverterParameter={x:Type m:FireTableColumnNumber}}"
                                 Tag="FireSystemColumn" />
                </GroupBox>

                <hc:ComboBox x:Name="cboProductName"
                             hc:InfoElement.Necessary="True"
                             hc:TitleElement.Title="设备名称"
                             ItemsSource="{Binding RequiredColumnNumbers}"
                             SelectedValue="{Binding ColumnMapping.ProductNameColumn, Converter={StaticResource EnumToIntConverter}, ConverterParameter={x:Type m:FireTableColumnNumber}}"
                             Tag="ProductNameColumn" />

                <hc:ComboBox x:Name="cboCount"
                             hc:TitleElement.Title="数量"
                             SelectedValue="{Binding ColumnMapping.CountColumn, Converter={StaticResource EnumToIntConverter}, ConverterParameter={x:Type m:FireTableColumnNumber}}"
                             Tag="CountColumn" />

                <GroupBox Background="{DynamicResource RegionBrush}"
                          Header="产品型号 &amp; 生产厂家">
                    <hc:UniformSpacingPanel Orientation="Vertical"
                                            VerticalSpacing="8">
                        <hc:ComboBox x:Name="cboModel"
                                     hc:InfoElement.Necessary="True"
                                     hc:TitleElement.Title="产品型号"
                                     ItemsSource="{Binding RequiredColumnNumbers}"
                                     SelectedValue="{Binding ColumnMapping.ModelColumn, Converter={StaticResource EnumToIntConverter}, ConverterParameter={x:Type m:FireTableColumnNumber}}"
                                     Tag="ModelColumn" />

                        <hc:ComboBox x:Name="cboEnterpriseName"
                                     hc:InfoElement.Necessary="True"
                                     hc:TitleElement.Title="生产厂家"
                                     ItemsSource="{Binding RequiredColumnNumbers}"
                                     SelectedValue="{Binding ColumnMapping.EnterpriseNameColumn, Converter={StaticResource EnumToIntConverter}, ConverterParameter={x:Type m:FireTableColumnNumber}}"
                                     Tag="EnterpriseNameColumn" />
                    </hc:UniformSpacingPanel>
                </GroupBox>

                <GroupBox Background="{DynamicResource RegionBrush}"
                          Header="证书编号 &amp; 检验报告">
                    <hc:UniformSpacingPanel Orientation="Vertical"
                                            VerticalSpacing="8">
                        <hc:ComboBox x:Name="cboCertificateNumber"
                                     hc:InfoElement.Necessary="True"
                                     hc:TitleElement.Title="证书编号"
                                     ItemsSource="{Binding RequiredColumnNumbers}"
                                     SelectedValue="{Binding ColumnMapping.CertificateNumberColumn, Converter={StaticResource EnumToIntConverter}, ConverterParameter={x:Type m:FireTableColumnNumber}}"
                                     Tag="CertificateNumberColumn" />

                        <hc:ComboBox x:Name="cboReportNumber"
                                     hc:TitleElement.Title="检验报告"
                                     ItemsSource="{Binding OptionalColumnNumbers}"
                                     SelectedValue="{Binding ColumnMapping.ReportNumberColumn, Converter={StaticResource EnumToIntConverter}, ConverterParameter={x:Type m:FireTableColumnNumber}}"
                                     Tag="ReportNumberColumn" />
                    </hc:UniformSpacingPanel>
                </GroupBox>

                <hc:ComboBox x:Name="cboStatus"
                             hc:TitleElement.Title="合格证"
                             SelectedValue="{Binding ColumnMapping.StatusColumn, Converter={StaticResource EnumToIntConverter}, ConverterParameter={x:Type m:FireTableColumnNumber}}"
                             Tag="StatusColumn" />

                <hc:ComboBox x:Name="cboManufactureDate"
                             hc:TitleElement.Title="出厂日期"
                             SelectedValue="{Binding ColumnMapping.ManufactureDateColumn, Converter={StaticResource EnumToIntConverter}, ConverterParameter={x:Type m:FireTableColumnNumber}}"
                             Tag="ManufactureDateColumn" />

                <hc:ComboBox x:Name="cboRemark"
                             hc:TitleElement.Title="备注"
                             SelectedValue="{Binding ColumnMapping.RemarkColumn, Converter={StaticResource EnumToIntConverter}, ConverterParameter={x:Type m:FireTableColumnNumber}}"
                             Tag="RemarkColumn" />

                <hc:Divider Margin="8"
                            Content="映射规则" />

                <hc:ComboBox x:Name="cboRuleColumns"
                             hc:Empty.ShowEmpty="True"
                             hc:InfoElement.Necessary="True"
                             hc:InfoElement.Placeholder="满足规则列数的行视为一条设备记录"
                             hc:TitleElement.Title="规则列数"
                             ItemsSource="{Binding RuleColumnsNumbers}"
                             SelectedValue="{Binding ColumnMapping.RuleColumns, Converter={StaticResource EnumToIntConverter}, ConverterParameter={x:Type m:FireTableColumnNumber}}"
                             Tag="RuleColumns" />

                <Button Command="{Binding AddSkipRowRuleCommand}"
                        Content="添加跳过规则(_K)"
                        Style="{StaticResource ButtonDashed}"
                        ToolTip="避免检查无效行&#x0A;&#x0A; • 跳过表格中与设备记录行列数相同的其他内容行&#x0A; • 排除非 CCCF 认证的设备记录行" />
            </hc:UniformSpacingPanel>

            <GroupBox Grid.Column="1"
                      Margin="8,0,0,0"
                      Header="跳过规则">
                <DataGrid x:Name="dgSkipRowRules"
                          b:AutoRowNumberBehavior.EnableAutoRowNumbers="True"
                          b:AutoScrollBehavior.IsEnabled="True"
                          d:ItemsSource="{d:SampleData ItemCount=5}"
                          dd:DragDrop.CanDragWithMouseRightButton="False"
                          dd:DragDrop.DropHandler="{Binding}"
                          dd:DragDrop.IsDropTarget="True"
                          dd:DragDrop.UseDefaultDragAdorner="True"
                          hc:Empty.ShowEmpty="True"
                          AutoGenerateColumns="False"
                          CanUserReorderColumns="False"
                          CanUserResizeColumns="False"
                          CanUserResizeRows="False"
                          CanUserSortColumns="False"
                          EnableRowVirtualization="False"
                          ItemsSource="{Binding ColumnMapping.SkipRowRules}"
                          RowHeight="{StaticResource NaN}"
                          SelectionMode="Single"
                          SelectionUnit="FullRow"
                          Style="{StaticResource DataGridBaseStyle}">
                    <DataGrid.RowStyle>
                        <Style BasedOn="{StaticResource DataGridRowStyle}"
                               TargetType="{x:Type DataGridRow}">
                            <Setter Property="MaxHeight" Value="120" />

                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource RegionBrush}" />

                                </Trigger>

                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource LightPrimaryBrush}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.RowStyle>

                    <DataGrid.CellStyle>
                        <Style BasedOn="{StaticResource DataGridCellStyle}"
                               TargetType="{x:Type DataGridCell}">
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="Transparent" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.CellStyle>

                    <DataGrid.Columns>
                        <DataGridTemplateColumn>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <hc:SimpleStackPanel Orientation="Horizontal">
                                        <Button dd:DragDrop.IsDragSource="True"
                                                hc:IconElement.Geometry="{StaticResource AlignHStretchGeometry}"
                                                Foreground="{DynamicResource MyReverseBrush}"
                                                Opacity="0.4"
                                                Style="{StaticResource ButtonIcon}"
                                                ToolTip="拖拽排序" />

                                        <TextBlock Name="RowNumberText"
                                                   VerticalAlignment="Center"
                                                   Foreground="{DynamicResource MyReverseBrush}"
                                                   Text="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}, Mode=OneWay, Converter={StaticResource RowIndexConverter}}" />
                                    </hc:SimpleStackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <!--  DataGridTemplateColumn 中的内容绑定需要 UpdateSourceTrigger=PropertyChanged 才能生效  -->
                        <DataGridTemplateColumn>
                            <DataGridTemplateColumn.Header>
                                <TextBlock Text="启用" />
                            </DataGridTemplateColumn.Header>

                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate DataType="{x:Type m:FireTableSkipRowRule}">
                                    <CheckBox HorizontalAlignment="Center"
                                              IsChecked="{Binding IsEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn Header="目标列">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate DataType="{x:Type m:FireTableSkipRowRule}">
                                    <ComboBox DisplayMemberPath="Display"
                                              ItemsSource="{Binding Data.SkipRowRuleColumnsNumbers, Source={StaticResource DataContextProxy}}"
                                              SelectedValue="{Binding TargetColumn, Mode=TwoWay, Converter={StaticResource EnumToIntConverter}, ConverterParameter={x:Type m:FireTableColumnNumber}, UpdateSourceTrigger=PropertyChanged}"
                                              SelectedValuePath="Value">
                                        <ComboBox.Style>
                                            <Style BasedOn="{StaticResource ComboBoxBaseStyle}"
                                                   TargetType="{x:Type ComboBox}">
                                                <Style.Triggers>
                                                    <Trigger Property="SelectedItem" Value="{x:Null}">
                                                        <Setter Property="BorderBrush" Value="{DynamicResource DangerBrush}" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ComboBox.Style>
                                    </ComboBox>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn MinWidth="100"
                                                MaxWidth="278"
                                                Header="匹配文本">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate DataType="{x:Type m:FireTableSkipRowRule}">
                                    <TextBox x:Name="tbMatchText"
                                             Padding="8"
                                             Text="{Binding MatchText, UpdateSourceTrigger=PropertyChanged}"
                                             TextWrapping="Wrap"
                                             VerticalScrollBarVisibility="Auto">
                                        <TextBox.Style>
                                            <Style BasedOn="{StaticResource TextBoxBaseStyle}"
                                                   TargetType="{x:Type TextBox}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding MatchText, Converter={StaticResource StringToBoolConverter}}"
                                                                 Value="{StaticResource False}">
                                                        <Setter Property="BorderBrush" Value="{DynamicResource DangerBrush}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn>
                            <DataGridTemplateColumn.Header>
                                <TextBlock Text="  区分&#x0A;大小写" />
                            </DataGridTemplateColumn.Header>

                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate DataType="{x:Type m:FireTableSkipRowRule}">
                                    <CheckBox HorizontalAlignment="Center"
                                              IsChecked="{Binding MatchCase, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn>
                            <DataGridTemplateColumn.Header>
                                <TextBlock Text="模糊&#x0A;匹配" />
                            </DataGridTemplateColumn.Header>

                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate DataType="{x:Type m:FireTableSkipRowRule}">
                                    <CheckBox HorizontalAlignment="Center"
                                              IsChecked="{Binding UseFuzzyMatching, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button hc:IconElement.Geometry="{StaticResource DeleteGeometry}"
                                            Command="{Binding Data.DeleteSkipRowRuleCommand, Source={StaticResource DataContextProxy}}"
                                            CommandParameter="{Binding}"
                                            Foreground="{DynamicResource DangerBrush}"
                                            Style="{StaticResource ButtonIcon}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </GroupBox>

            <GroupBox Grid.Row="1"
                      Grid.Column="1"
                      Margin="8,8,0,0"
                      Header="描述">
                <hc:TextBox Padding="4"
                            b:TripleClickToSelectAllBehavior.IsEnabled="True"
                            hc:InfoElement.Placeholder="最大字符数: 100"
                            AcceptsReturn="False"
                            MaxLength="100"
                            Style="{StaticResource TextBoxPlusBaseStyle}"
                            Text="{Binding ColumnMapping.Description, UpdateSourceTrigger=PropertyChanged}"
                            TextWrapping="Wrap"
                            VerticalScrollBarVisibility="Auto" />
            </GroupBox>
        </Grid>

        <hc:Divider Grid.Row="1"
                    Margin="-12,12" />

        <hc:SimplePanel Grid.Row="2">
            <hc:UniformSpacingPanel Grid.Row="1"
                                    Margin="8,4,0,0"
                                    VerticalAlignment="Center"
                                    HorizontalSpacing="8"
                                    Orientation="Horizontal">
                <Border BorderBrush="{DynamicResource DangerBrush}"
                        Style="{StaticResource LabelBorderStyle}"
                        Visibility="{Binding ColumnMapping.HasEmptyRequiredColumn, Converter={StaticResource Boolean2VisibilityConverter}}">
                    <hc:SimpleText Foreground="{DynamicResource DangerBrush}"
                                   Text="• 必选" />
                </Border>

                <Border BorderBrush="{DynamicResource DangerBrush}"
                        Style="{StaticResource LabelBorderStyle}"
                        Visibility="{Binding ColumnMapping.HasConflictingColumn, Converter={StaticResource Boolean2VisibilityConverter}}">
                    <hc:SimpleText Foreground="{DynamicResource DangerBrush}"
                                   Text="存在不兼容的相同映射列" />
                </Border>

                <Border BorderBrush="{DynamicResource DangerBrush}"
                        Style="{StaticResource LabelBorderStyle}"
                        Visibility="{Binding ColumnMapping.SkipRowRulesHasError, Converter={StaticResource Boolean2VisibilityConverter}}">
                    <hc:SimpleText Foreground="{DynamicResource DangerBrush}"
                                   Text="存在错误的跳过规则" />
                </Border>
            </hc:UniformSpacingPanel>

            <hc:UniformSpacingPanel HorizontalAlignment="Right"
                                    ItemHorizontalAlignment="Right"
                                    Spacing="4">
                <Button Command="{Binding OpenDocumentCommand}"
                        Content="查看文档(_O)..."
                        IsEnabled="{Binding DocumentPath, Converter={StaticResource StringToBoolConverter}}"
                        ToolTip="{Binding DocumentPath}" />

                <hc:Divider MaxHeight="16"
                            Orientation="Vertical" />

                <Button Command="{Binding DeleteCommand}"
                        Content="删除(_D)"
                        Style="{StaticResource ButtonDashedDanger.Small}" />

                <hc:Divider MaxHeight="16"
                            Orientation="Vertical" />

                <Button Command="{Binding SaveCommand}"
                        Content="保存(_S)"
                        IsEnabled="{Binding ColumnMapping.HasError, Converter={StaticResource Boolean2BooleanReConverter}}"
                        Style="{StaticResource ButtonPrimary}" />
            </hc:UniformSpacingPanel>
        </hc:SimplePanel>
    </Grid>
</hc:Window>
